/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Cycloid;

import java.awt.Color;
import java.awt.Graphics;
import static java.lang.Math.sin;
import static java.lang.Math.cos;
import java.util.ArrayList;
import java.util.List;

/**
 *
 * @author 도원
 */
public class ImageViewPanel extends javax.swing.JPanel {

    float t;
    int r;
    ArrayList PointXList = new ArrayList();
    ArrayList PointYList = new ArrayList();
    private int CircleV;
    
    /**
     * Creates new form ImageViewPanel
     */
    
    public ImageViewPanel() {
        initComponents();
        t=0;
        r=50;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents
     
    protected void paintComponent(Graphics g) {
        
        int fl=340;
        int PointX=(int) ((45+r)+r*(t-sin(t))); 
        int PointY=(int) ((fl-5)-r*(1-cos(t)));
        PointXList.add(PointX);
        PointYList.add(PointY);
        CircleV=(int) (50+r*t);
        super.paintComponent(g);
        
        Color red = Color.red;
        Color dark_gray = Color.DARK_GRAY;
        Color black = Color.black;
        
        g.setColor(dark_gray);
        g.fillRect(0,340,800,50);
        
        g.setColor(black);
        g.drawOval(CircleV,fl-2*r,2*r,2*r);
        
        g.setColor(red);
        for(int i=0;i<PointXList.size();i++)
            g.fillOval((int)PointXList.get(i),(int)PointYList.get(i),10,10);
        
    }
    
    public void setTime( float t ) {
        this.t =t ;
    }
    
    public void setR( int radius ) {
        r = radius;
    }
    
    public void ListClear(){
        PointXList.clear();
        PointYList.clear();
    }

    public int getCircleV(){
        return CircleV;
    }
    
    //get r from firstex
    //make list for before axis
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
